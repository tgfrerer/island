
name: C/C++ CI

on:
  push:
    branches: [ wip ]
  pull_request:
    branches: [ wip ]


jobs:

  job:
    name: ${{ matrix.name }}-build-and-test
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        name: [ubuntu-latest-g++, windows-latest-cl.exe, ubuntu-latest-clang++]
        # For Windows msvc, for Linux let's use the clang compiler, and gcc.
        include:
          - name: windows-latest-cl.exe
            os: windows-latest
            cxx: cl.exe
            cc: cl.exe
          - name: ubuntu-latest-clang++
            os: ubuntu-latest
            cxx: clang++
            cc: clang
          - name: ubuntu-latest-g++
            os: ubuntu-latest
            cxx: g++
            cc: gcc

    steps:
    
    - uses: actions/checkout@v2
    
    - name: Install Vulkan SDK
      uses: humbletim/install-vulkan-sdk@v1.1.1
      with:
        version: latest
        cache: true

    - name: (Linux) Install Dependencies
      if: startsWith(matrix.name, 'ubuntu')
      shell: bash
      run: 
        sudo apt-get install -y libxinerama-dev libxcursor-dev libxi-dev libxrandr-dev;

    - name: (Windows) Set VCvars
      if: startsWith(matrix.name, 'windows')
      uses: ilammy/msvc-dev-cmd@v1

    - name: Set Compiler Environment
      uses: lukka/set-shell-env@v1
      with:
        CXX: ${{ matrix.cxx }}
        CC: ${{ matrix.cc }}
        
    - name: Setup Ninja
      uses: seanmiddleditch/gha-setup-ninja@master
    
    - name: Windows Integration Tests
      if: startsWith(matrix.name, 'windows')
      shell: powershell
      run: |
          git submodule init
          git submodule update --depth=1
          & ./scripts/ci/run_tests.ps1      
    - name: (Linux) Run Tests
      if: startsWith(matrix.name, 'ubuntu')
      run: |
          PKG_CONFIG_PATH="${VULKAN_SDK}/lib/pkgconfig:${PKG_CONFIG_PATH}";
          export PKG_CONFIG_PATH ;
          echo "$VULKAN_SDK/lib" > vk.conf;
          sudo mv vk.conf /etc/ld.so.conf.d/vk.conf;
          sudo ldconfig ;
          find $VULKAN_SDK -type f -name "*.pc" -exec sed -i 's@vulkan-sdk/'"$VULKAN_SDK_VERSION}"'/x86_64@$VULKAN_SDK@g' {} +
          ./scripts/ci/run_tests.sh;
